apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: co2-assistant-psp
  namespace: co2-assistant
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  runAsUser:
    rule: 'MustRunAsNonRoot'
  seLinux:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: true
  allowedHostPaths: []
  allowedCapabilities: []
  allowedProcMountTypes: []
  allowedUnsafeSysctls: []
  forbiddenSysctls: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: co2-assistant-psp-user
  namespace: co2-assistant
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs: ['use']
  resourceNames:
  - co2-assistant-psp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: co2-assistant-psp-binding
  namespace: co2-assistant
roleRef:
  kind: Role
  name: co2-assistant-psp-user
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: co2-assistant
  namespace: co2-assistant
